apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"webserver","namespace":"default"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"},"name":"nginx"},"spec":{"containers":[{"image":"nginx","name":"nginx","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2020-06-15T06:26:30Z"
    generation: 1
    name: webserver
    namespace: default
    resourceVersion: "17996883"
    selfLink: /apis/apps/v1/namespaces/default/deployments/webserver
    uid: 5c3696f6-6a02-4744-8d74-85c54a3ce951
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
        name: nginx
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2020-06-15T06:26:30Z"
      lastUpdateTime: "2020-06-15T06:26:50Z"
      message: ReplicaSet "webserver-674cc76668" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-17T05:57:18Z"
      lastUpdateTime: "2020-06-17T05:57:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"baz-deploy","exam":"cpu-utilizer"},"name":"baz-deploy","namespace":"development"},"spec":{"replicas":4,"selector":{"matchLabels":{"app":"baz-deploy","exam":"cpu-utilizer"}},"strategy":{},"template":{"metadata":{"labels":{"app":"baz-deploy","exam":"cpu-utilizer"}},"spec":{"containers":[{"image":"k8s.gcr.io/hpa-example","name":"baz-deploy","ports":[{"containerPort":80}],"resources":{"limits":{"cpu":"100m"}}}]}}}}
    creationTimestamp: "2020-06-15T08:45:06Z"
    generation: 1
    labels:
      app: baz-deploy
      exam: cpu-utilizer
    name: baz-deploy
    namespace: development
    resourceVersion: "17996880"
    selfLink: /apis/apps/v1/namespaces/development/deployments/baz-deploy
    uid: 3ccdd8dc-8b7c-4fd7-9266-31d171761ab5
  spec:
    progressDeadlineSeconds: 600
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: baz-deploy
        exam: cpu-utilizer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: baz-deploy
          exam: cpu-utilizer
      spec:
        containers:
        - image: k8s.gcr.io/hpa-example
          imagePullPolicy: Always
          name: baz-deploy
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 4
    conditions:
    - lastTransitionTime: "2020-06-15T08:45:06Z"
      lastUpdateTime: "2020-06-15T08:45:14Z"
      message: ReplicaSet "baz-deploy-7456c86698" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-17T05:57:14Z"
      lastUpdateTime: "2020-06-17T05:57:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 4
    replicas: 4
    updatedReplicas: 4
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"exam":"cpu-utilizer"},"name":"load-generator","namespace":"development"},"spec":{"selector":{"matchLabels":{"exam":"cpu-utilizer"}},"template":{"metadata":{"labels":{"exam":"cpu-utilizer"}},"spec":{"containers":[{"args":["sh","-c","while true; do date \u0026\u0026 sleep 500; done"],"image":"busybox","imagePullPolicy":"Always","name":"load-generator","resources":{"limits":{"cpu":"250m"}}}]}}}}
    creationTimestamp: "2020-06-15T08:45:06Z"
    generation: 1
    labels:
      exam: cpu-utilizer
    name: load-generator
    namespace: development
    resourceVersion: "17996893"
    selfLink: /apis/apps/v1/namespaces/development/deployments/load-generator
    uid: 570f6e8d-414b-44f4-8829-7ccaf171495d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        exam: cpu-utilizer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          exam: cpu-utilizer
      spec:
        containers:
        - args:
          - sh
          - -c
          - while true; do date && sleep 500; done
          image: busybox
          imagePullPolicy: Always
          name: load-generator
          resources:
            limits:
              cpu: 250m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-15T08:45:06Z"
      lastUpdateTime: "2020-06-15T08:45:16Z"
      message: ReplicaSet "load-generator-7d9c4dd7b9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-17T05:57:19Z"
      lastUpdateTime: "2020-06-17T05:57:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"calico-kube-controllers"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"containers":[{"env":[{"name":"ENABLED_CONTROLLERS","value":"node"},{"name":"DATASTORE_TYPE","value":"kubernetes"}],"image":"calico/kube-controllers:v3.8.5","name":"calico-kube-controllers","readinessProbe":{"exec":{"command":["/usr/bin/check-status","-r"]}}}],"nodeSelector":{"beta.kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"calico-kube-controllers","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}]}}}}
    creationTimestamp: "2020-01-05T07:49:19Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
    name: calico-kube-controllers
    namespace: kube-system
    resourceVersion: "17996896"
    selfLink: /apis/apps/v1/namespaces/kube-system/deployments/calico-kube-controllers
    uid: 9b0ee5e3-5c4b-4198-ac12-86aa037472cd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: calico/kube-controllers:v3.8.5
          imagePullPolicy: IfNotPresent
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-01-05T07:49:19Z"
      lastUpdateTime: "2020-01-05T07:50:17Z"
      message: ReplicaSet "calico-kube-controllers-778676476b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-17T05:57:20Z"
      lastUpdateTime: "2020-06-17T05:57:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-01-05T07:46:39Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "17996803"
    selfLink: /apis/apps/v1/namespaces/kube-system/deployments/coredns
    uid: 92e3a8a2-5d1e-4c3d-a37e-5eefd5f65158
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: k8s.gcr.io/coredns:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2020-01-05T07:46:54Z"
      lastUpdateTime: "2020-01-05T07:50:13Z"
      message: ReplicaSet "coredns-5644d7b6d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-17T05:57:05Z"
      lastUpdateTime: "2020-06-17T05:57:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"foo","exam":"ep"},"name":"foo-deploy","namespace":"production"},"spec":{"replicas":7,"selector":{"matchLabels":{"app":"foo","exam":"ep"}},"template":{"metadata":{"labels":{"app":"foo","exam":"ep"}},"spec":{"containers":[{"image":"nginx:1.14.2","name":"nginx","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2020-06-15T06:26:06Z"
    generation: 1
    labels:
      app: foo
      exam: ep
    name: foo-deploy
    namespace: production
    resourceVersion: "17996887"
    selfLink: /apis/apps/v1/namespaces/production/deployments/foo-deploy
    uid: 66de1b77-b1de-4047-a9f8-2a988865ee63
  spec:
    progressDeadlineSeconds: 600
    replicas: 7
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: foo
        exam: ep
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foo
          exam: ep
      spec:
        containers:
        - image: nginx:1.14.2
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 7
    conditions:
    - lastTransitionTime: "2020-06-15T06:26:06Z"
      lastUpdateTime: "2020-06-15T06:26:46Z"
      message: ReplicaSet "foo-deploy-85c6dbd77d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-17T05:57:12Z"
      lastUpdateTime: "2020-06-17T05:57:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 7
    replicas: 7
    updatedReplicas: 7
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
